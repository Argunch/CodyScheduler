// scripts/services/user-manager.js
import { ApiService } from './api-service.js';

export class UserManager {
    constructor() {
        this.apiService = new ApiService();
        this.currentUserInfo = null;
    }

     /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
     */
    async initUserSwitcher() {
        const userSelect = document.getElementById('user-select');
        if (!userSelect) return;

        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ ApiService
            const users = await this.apiService.getUsersList();

            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫, –∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ
            users.forEach(user => {
                // üëá –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (user.id.toString() !== this.getCurrentUserId()) {
                    const option = document.createElement('option');
                    option.value = user.id;
                    option.textContent = user.username;
                    userSelect.appendChild(option);
                }
            });

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
            await this.restoreUserSelection();

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
            userSelect.addEventListener('change', (e) => {
                this.handleUserSwitch(e.target.value);
            });

            console.log('‚úÖ User switcher initialized');

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        }
    }

    getCurrentUserId() {
        // –ò–∑ data-–∞—Ç—Ä–∏–±—É—Ç–∞
        const userElement = document.querySelector('[data-user-id]');
        if (userElement) {
            return userElement.dataset.userId;
        }

        // –ò–ª–∏ –∏–∑ meta-—Ç–µ–≥–∞
        const metaElement = document.querySelector('meta[name="current-user-id"]');
        if (metaElement) {
            return metaElement.getAttribute('content');
        }

        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        return '';
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async handleUserSwitch(userId) {
        try {
            const data = await this.apiService.switchUser(userId);

            if (data.status === 'success') {
                this.currentUserInfo = '';
                this.updateUserInfoDisplay();

                // üëá –î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ö–£ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
                this.saveUserSelection(userId);

                // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
                this.dispatchUserChangedEvent(userId);

            } else {
                throw new Error(data.message);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            alert('–û—à–∏–±–∫–∞: ' + error.message);
        }
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
     */
    saveUserSelection(userId) {
        try {
            localStorage.setItem('selectedUserId', userId);
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
     */
    loadUserSelection() {
        try {
            return localStorage.getItem('selectedUserId') || 'self';
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            return 'self';
        }
    }

    /**
     * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
     */
    async restoreUserSelection() {
        const savedUserId = this.loadUserSelection();
        const userSelect = document.getElementById('user-select');

        if (userSelect && savedUserId) {
            userSelect.value = savedUserId;

            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –Ω–µ "self", –ø—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±–æ—Ä
            if (savedUserId !== 'self') {
                await this.handleUserSwitch(savedUserId);
            }
        }
    }
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     */
    updateUserInfoDisplay() {
        const infoElement = document.getElementById('current-user-info');
        if (infoElement && this.currentUserInfo) {
            infoElement.textContent = this.currentUserInfo;
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –æ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    dispatchUserChangedEvent(userId) {
        const event = new CustomEvent('userChanged', {
            detail: {
                userId: userId,
                timestamp: new Date(),
                message: this.currentUserInfo
            }
        });
        document.dispatchEvent(event);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     */
    getCurrentUserInfo() {
        return this.currentUserInfo;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {boolean} true –µ—Å–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     */
    isViewingOtherUser() {
        const userSelect = document.getElementById('user-select');
        return userSelect && userSelect.value !== 'self';
    }


    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å–º–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {Function} callback - –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
     */
    onUserChanged(callback) {
        document.addEventListener('userChanged', callback);
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å–º–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {Function} callback - –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
     */
    offUserChanged(callback) {
        document.removeEventListener('userChanged', callback);
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    destroy() {
        const userSelect = document.getElementById('user-select');
        if (userSelect) {
            userSelect.replaceWith(userSelect.cloneNode(true)); // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        }

        this.currentUserInfo = null;
        console.log('üßπ User manager cleaned up');
    }
}